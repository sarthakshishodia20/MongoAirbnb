"use strict";
var sessionCookies = (() => {
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

  // src/index.ts
  var src_exports = {};
  __export(src_exports, {
    cookies: () => cookies,
    local: () => local,
    session: () => session
  });

  // src/LocalStorage.tsx
  var getLocalStorage = (key) => {
    const data = localStorage.getItem(key);
    if (!data)
      return void 0;
    return data;
  };
  var setLocalStorage = (key, value) => {
    localStorage.setItem(key, value);
  };
  var removeLocalStorage = (key) => {
    localStorage.removeItem(key);
  };
  var clearLocalStorage = () => {
    localStorage.clear();
  };
  var getLocalStorageKeyFindIndex = (index) => {
    return localStorage.key(index);
  };
  function getAllLocalStorage() {
    return localStorage;
  }
  var local = {
    getAllLocalStorage,
    getLocalStorage,
    setLocalStorage,
    removeLocalStorage,
    clearLocalStorage,
    getLocalStorageKeyFindIndex
  };

  // src/SessionStorage.tsx
  var getSessionStorage = (key) => {
    const data = sessionStorage.getItem(key);
    if (!data)
      return void 0;
    return data;
  };
  var setSessionStorage = (key, value) => {
    sessionStorage.setItem(key, value);
  };
  var removeSessionStorage = (key) => {
    sessionStorage.removeItem(key);
  };
  var clearSessionStorage = () => {
    sessionStorage.clear();
  };
  var getSessionStorageKeyFindIndex = (index) => {
    return sessionStorage.key(index);
  };
  function getAllSessionStorage() {
    return sessionStorage;
  }
  var session = {
    getAllSessionStorage,
    getSessionStorage,
    setSessionStorage,
    removeSessionStorage,
    clearSessionStorage,
    getSessionStorageKeyFindIndex
  };

  // src/Cookie.tsx
  function getCookieStr() {
    return document.cookie.split(";");
  }
  function getCookieList() {
    const cookies2 = [];
    getCookieStr()?.forEach((item) => {
      const [key, value] = item.trim().split("=");
      cookies2.push({ [key]: value });
    });
    return cookies2;
  }
  var getCookie = (key) => {
    const data = getCookieStr()?.find(
      (item) => item.includes(`${key}=`)
    );
    if (!data)
      return void 0;
    const [key1, value] = data.trim().split("=");
    console.log(key1);
    return value;
  };
  var setCookie = (key, value) => {
    document.cookie = `${key}=${value}`;
  };
  var removeCookie = (key) => {
    document.cookie = `${key}=;path=/;max-age=0`;
  };
  var clearCookie = () => {
    getCookieStr().map((item) => {
      const [key] = item.trim().split("=");
      removeCookie(key);
    });
  };
  var cookies = {
    getCookieList,
    getCookie,
    setCookie,
    removeCookie,
    clearCookie
  };
  return __toCommonJS(src_exports);
})();
